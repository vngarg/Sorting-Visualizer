{"version":3,"sources":["actions/constants.js","actions/array-operations.js","components/slider/index.js","components/UpdatePillarHeight/Update.js","components/Sleep/sleep.js","components/ChangePillarColors/ChangePillarColors.js","sorting/selection-sort/selection.js","sorting/insertion-sort/insertion.js","sorting/bubble-sort/Bubble.js","components/RandomizeArray/RandomizeArray.js","App.js","reducers/array-operations.js","reducers/index.js","index.js"],"names":["Constants","UpdateArray","size","array","Array","from","length","Math","floor","random","dispatch","type","payload","UpdateSortingState","sorting","Slider","useState","value","onChange","useDispatch","useEffect","ele","document","querySelector","style","left","Number","className","min","max","radius","target","UpdatePillars","i","getElementsByClassName","forEach","pillar","height","sleep","time","Promise","resolve","setTimeout","ChangeColor","index","pillars","querySelectorAll","backgroundColor","MakeAllWhite","FinalCheck","a","len","SelectionSort","useSelector","state","arr","findMin","start","minIndex","temp","disabled","onClick","InsertionSort","j","Bubble","swaps","RandomizeArray","randomizeArray","App","mainDiv","firstChild","remove","element","createElement","classList","add","appendChild","CreatePillars","initState","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2ce0152.chunk.js","sourcesContent":["export const Constants = {\n    GET_ARRAY: 'GET_ARRAY',\n    UPDATE_ARRAY: 'UPDATE_ARRAY',\n    UPDATE_SORTING_STATE: 'UPDATE_SORTING_STATE',\n}","import { Constants } from \"./constants\";\n\n// export const showArray = () => {\n//     return dispatch => {\n//         dispatch({\n//             type: Constants.GET_ARRAY\n//         })\n//     }\n// }\n\nexport const UpdateArray = (size) => {\n    // generating a random array of the new size. Values of the array are from 0 to (size*50)\n    var array = Array.from({length: size}, () => (Math.floor(Math.random() * 398)) + 1); \n\n    return dispatch => {\n        dispatch({\n            type: Constants.UPDATE_ARRAY,\n            payload: {\n                size,\n                array\n            }\n        })\n    }\n}\n\nexport const UpdateSortingState = (sorting) => {\n    return dispatch => {\n        dispatch({\n            type: Constants.UPDATE_SORTING_STATE,\n            payload: {\n                sorting\n            }\n        })\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateArray } from \"../../actions/array-operations\";\n\nexport default function Slider() {\n  const [value, onChange] = useState(16);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const ele = document.querySelector(\".buble\");\n    if (ele) {\n      ele.style.left = `${Number(value / 4)}px`;\n    }\n  });\n\n  return (\n    <div className=\"slider-parent m-2\">\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"4\"\n        max=\"40\"\n        value={value}\n        onChange={({ target: { value: radius } }) => {\n          onChange(radius);\n          dispatch(UpdateArray(Number(radius)));\n        }}\n      />\n      <div className=\"buble\">{value}</div>\n    </div>\n  );\n}\n","function UpdatePillars(array) {\n    var i = 0;\n    var pillars = Array.from(document.getElementsByClassName('pillar'));\n    pillars.forEach(pillar => {\n        pillar.style.height = `${array[i]}px`;\n        ++i;\n    });\n}\n\nexport default UpdatePillars;","const sleep = (time) => {\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport default sleep;","import sleep from \"../Sleep/sleep\";\n\nexport const ChangeColor = (index) => {\n    var pillars = document.querySelectorAll('.pillar');\n    pillars.forEach(pillar => pillar.style.backgroundColor = 'white')\n    pillars[index].style.backgroundColor = '#0be345';\n}\n\nexport const MakeAllWhite = () => {\n    var pillars = document.querySelectorAll('.pillar');\n    pillars.forEach(pillar => pillar.style.backgroundColor = 'white')\n}\n\nexport const FinalCheck = async () => {\n    await sleep(400);\n    \n    var pillars = Array.from(document.querySelectorAll('.pillar'));\n    var len = pillars.length;\n    for(var i=0;i<len;++i) {\n        await sleep(100);\n        pillars[i].style.backgroundColor = '#0be345';\n    }\n}","import React from 'react'\nimport '../../App.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UpdateArray, UpdateSortingState } from '../../actions/array-operations';\nimport UpdatePillars from '../../components/UpdatePillarHeight/Update';\nimport sleep from '../../components/Sleep/sleep';\nimport {ChangeColor, MakeAllWhite, FinalCheck} from '../../components/ChangePillarColors/ChangePillarColors';\n\nconst SelectionSort = () => {\n    const dispatch = useDispatch();\n    var array = useSelector(state => state.arr.array);\n    var size = useSelector(state => state.arr.size);\n    var sorting = useSelector(state => state.arr.sorting);\n\n    function findMin(start) {\n        var min = start;\n        for(var i=start;i<size;++i) {\n            if(array[i] < array[min])\n                min = i;\n        }\n        return min;\n    }\n\n    async function sort() {\n        dispatch(UpdateSortingState(false));\n        for(var i=0;i<size;++i) {\n            ChangeColor(i)\n            var minIndex = findMin(i);\n            var temp = array[minIndex];\n            array[minIndex] = array[i];\n            array[i] = temp;\n            dispatch(UpdateArray);\n            await sleep(400);\n            UpdatePillars(array);\n        }\n        MakeAllWhite();\n        await FinalCheck();\n        MakeAllWhite();\n        dispatch(UpdateSortingState(true));\n    }\n\n    return (\n        <div>\n            <input disabled={sorting} type='button' onClick={sort} className='btn' value='Selection Sort' />\n        </div>\n    )\n}\n\nexport default SelectionSort\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { useDispatch } from \"react-redux\";\nimport { UpdateArray, UpdateSortingState } from '../../actions/array-operations';\nimport UpdatePillars from '../../components/UpdatePillarHeight/Update';\nimport sleep from '../../components/Sleep/sleep';\nimport {ChangeColor, MakeAllWhite, FinalCheck} from '../../components/ChangePillarColors/ChangePillarColors';\n\nconst InsertionSort = () => {\n    const dispatch = useDispatch();\n    var array = useSelector(state => state.arr.array);\n    var size = useSelector(state => state.arr.size);\n    var sorting = useSelector(state => state.arr.sorting);\n\n    async function insertionSort() {\n        dispatch(UpdateSortingState(false));\n        for(var i = 1;i<size;++i) {\n            var index, temp, j;\n            if(array[i] < array[i-1]) {\n                for(j = i-1;j>=0;--j) {\n                    if(array[i] < array[j]) {\n                        index = j;\n                    } else {\n                        break;\n                    }\n                }\n\n                temp = array[i];\n                for(j = i;j > index;--j)\n                    array[j] = array[j-1];\n\n                array[index] = temp;\n                dispatch(UpdateArray);\n                await sleep(400);\n                UpdatePillars(array);\n            }\n            ChangeColor(i)\n        }\n        MakeAllWhite();\n        await FinalCheck();\n        MakeAllWhite();\n        dispatch(UpdateSortingState(true));\n    }\n\n    return (\n        <div>\n            <input disabled={sorting} type='button' value='Insertion Sort' className='btn' onClick={insertionSort} />\n        </div>\n    )\n}\n\nexport default InsertionSort\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { useDispatch } from \"react-redux\";\nimport { UpdateArray, UpdateSortingState } from '../../actions/array-operations';\nimport UpdatePillars from '../../components/UpdatePillarHeight/Update';\nimport sleep from '../../components/Sleep/sleep';\nimport {ChangeColor, MakeAllWhite, FinalCheck} from '../../components/ChangePillarColors/ChangePillarColors';\n\nconst Bubble = () => {\n    const dispatch = useDispatch();\n    var array = useSelector(state => state.arr.array);\n    var size = useSelector(state => state.arr.size);\n    var sorting = useSelector(state => state.arr.sorting);\n\n    async function bubbleSort() {\n        dispatch(UpdateSortingState(false));\n        var swaps = -1;\n        while(swaps !== 0) {\n            swaps = 0;\n            for(var i = size-1;i>=0;--i) {\n                if(array[i] < array[i-1]) {\n                    ChangeColor(i);\n                    var temp = array[i-1];\n                    array[i-1] = array[i];\n                    array[i] = temp;\n                    ++swaps;\n                }\n            }\n            dispatch(UpdateArray);\n            await sleep(400);\n            UpdatePillars(array);\n        }\n        MakeAllWhite();\n        await FinalCheck();\n        MakeAllWhite();\n        dispatch(UpdateSortingState(true));\n    }\n    \n    return (\n        <div>\n            <input disabled={sorting} type='button' value='Bubble Sort' className='btn' onClick={bubbleSort} />\n        </div>\n    )\n}\n\nexport default Bubble\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UpdateArray } from '../../actions/array-operations';\n\nconst RandomizeArray = ({size}) => {\n    var dispatch = useDispatch();\n    var sorting = useSelector(state => state.arr.sorting);\n\n    const randomizeArray = (size) => {\n        dispatch(UpdateArray(size));\n    }\n\n    return <button disabled={sorting} style={{ 'width': '70px' }} onClick={() => randomizeArray(size)} className=\"btn\">\n        <i className=\"fas fa-sync-alt\"></i>\n    </button>\n}\n\nexport default RandomizeArray\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport Slider from \"./components/slider\";\nimport SelectionSort from \"./sorting/selection-sort/selection\";\nimport InsertionSort from \"./sorting/insertion-sort/insertion\";\nimport Bubble from \"./sorting/bubble-sort/Bubble\";\nimport \"./index.css\";\nimport { useSelector } from \"react-redux\";\nimport RandomizeArray from \"./components/RandomizeArray/RandomizeArray\";\n\nfunction App() {\n  var size = useSelector((state) => state.arr.size);\n  var array = useSelector((state) => state.arr.array);\n\n  const CreatePillars = () => {\n    var mainDiv = document.querySelector(\".mainDiv\");\n\n    while (mainDiv.firstChild) mainDiv.firstChild.remove();\n\n    for (var i = 0; i < size; ++i) {\n      var element = document.createElement(\"div\");\n      element.classList.add(\"pillar\");\n      element.style.height = `${array[i]}px`;\n      mainDiv.appendChild(element);\n    }\n  };\n\n  useEffect(() => {\n    CreatePillars();\n  });\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading text-center mt-3 mb-3\">Sorting Visualizer</h1>\n      <div className=\"mainDiv text-center\"></div>\n      <div className=\"row m-0 mt-4\">\n        <div className=\"col-lg-5\">\n          <Slider />\n        </div>\n        <div className=\"col-lg-7\">\n          <RandomizeArray size={size} />\n        </div>\n      </div>\n      <div className=\"container-fluid text-center mt-4 buttonGroup\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <SelectionSort />\n          </div>\n          <div className=\"col-lg-4\">\n            <InsertionSort />\n          </div>\n          <div className=\"col-lg-4\">\n            <Bubble />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { Constants } from \"../actions/constants\";\n\nconst initState = {\n    size: 16,\n    array: Array.from({length: 16}, () => (Math.floor(Math.random() * 398)) + 1),\n    sorting: false,\n}\n\nexport default (state = initState, action) => {\n    switch(action.type) {\n        // case Constants.GET_ARRAY: \n        //     state = {\n        //         ...initState\n        //     }\n        //     break;\n        case Constants.UPDATE_ARRAY:\n            state = {\n                ...state, \n                size: action.payload.size,\n                array: action.payload.array\n            }\n            break;\n        case Constants.UPDATE_SORTING_STATE: \n            state = {\n                ...state, \n                sorting: !action.payload.sorting,\n            }\n            break;\n        default: \n            break;\n    }\n    \n    return state;\n}","import { combineReducers } from 'redux';\nimport arrayOperations from './array-operations';\n\nconst reducer = combineReducers({\n    arr: arrayOperations,\n})\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducer, applyMiddleware(thunk)); \nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}