[{"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/index.js":"1","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/App.js":"2","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/reducers/index.js":"3","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/reducers/array-operations.js":"4","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/slider/index.js":"5","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/selection-sort/selection.js":"6","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/insertion-sort/insertion.js":"7","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/bubble-sort/Bubble.js":"8","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/UpdatePillarHeight/Update.js":"9","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/Sleep/sleep.js":"10","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/RandomizeArray/RandomizeArray.js":"11","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/ChangePillarColors/ChangePillarColors.js":"12","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/actions/array-operations.js":"13","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/actions/constants.js":"14","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/Merge Sort/MergeSort.js":"15"},{"size":488,"mtime":1612099129192,"results":"16","hashOfConfig":"17"},{"size":1828,"mtime":1614838175537,"results":"18","hashOfConfig":"17"},{"size":178,"mtime":1612078487361,"results":"19","hashOfConfig":"17"},{"size":849,"mtime":1614782761457,"results":"20","hashOfConfig":"17"},{"size":820,"mtime":1614782756977,"results":"21","hashOfConfig":"17"},{"size":1555,"mtime":1614782779994,"results":"22","hashOfConfig":"17"},{"size":1739,"mtime":1614805271212,"results":"23","hashOfConfig":"17"},{"size":1566,"mtime":1614782769417,"results":"24","hashOfConfig":"17"},{"size":252,"mtime":1614769672428,"results":"25","hashOfConfig":"17"},{"size":112,"mtime":1614782231927,"results":"26","hashOfConfig":"17"},{"size":571,"mtime":1614782745353,"results":"27","hashOfConfig":"17"},{"size":706,"mtime":1614782454137,"results":"28","hashOfConfig":"17"},{"size":831,"mtime":1614774680369,"results":"29","hashOfConfig":"17"},{"size":140,"mtime":1614769312973,"results":"30","hashOfConfig":"17"},{"size":1911,"mtime":1614806420446,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"yapyo2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/index.js",[],["65","66"],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/App.js",["67"],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/reducers/index.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/reducers/array-operations.js",["68"],"import { Constants } from \"../actions/constants\";\n\nconst initState = {\n    size: 16,\n    array: Array.from({length: 16}, () => (Math.floor(Math.random() * 398)) + 1),\n    sorting: false,\n}\n\nexport default (state = initState, action) => {\n    switch(action.type) {\n        // case Constants.GET_ARRAY: \n        //     state = {\n        //         ...initState\n        //     }\n        //     break;\n        case Constants.UPDATE_ARRAY:\n            state = {\n                ...state, \n                size: action.payload.size,\n                array: action.payload.array\n            }\n            break;\n        case Constants.UPDATE_SORTING_STATE: \n            state = {\n                ...state, \n                sorting: !action.payload.sorting,\n            }\n            break;\n        default: \n            break;\n    }\n    \n    return state;\n}","/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/slider/index.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/selection-sort/selection.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/insertion-sort/insertion.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/bubble-sort/Bubble.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/UpdatePillarHeight/Update.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/Sleep/sleep.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/RandomizeArray/RandomizeArray.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/components/ChangePillarColors/ChangePillarColors.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/actions/array-operations.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/actions/constants.js",[],"/home/shlokgarg/WEB/React/Visualize-Sorting/visualize-sorting/src/sorting/Merge Sort/MergeSort.js",["69","70","71","72"],"import React from 'react'\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { useDispatch } from \"react-redux\";\nimport { UpdateArray, UpdateSortingState } from '../../actions/array-operations';\nimport UpdatePillars from '../../components/UpdatePillarHeight/Update';\nimport sleep from '../../components/Sleep/sleep';\nimport {ChangeColor, MakeAllWhite, FinalCheck} from '../../components/ChangePillarColors/ChangePillarColors';\n\nconst MergeSort = () => {\n    const dispatch = useDispatch();\n    var array = useSelector(state => state.arr.array);\n    var size = useSelector(state => state.arr.size);\n    var sorting = useSelector(state => state.arr.sorting);\n\n    async function Merger(start, mid, end) {\n        var i = start, j = mid, k = 0;\n        var temp = new Array(end-start+1);\n\n        while(i < mid && j <= end) {\n            if(array[i] > array[j]) {\n                temp[k++] = array[j++];\n            } else {\n                temp[k++] = array[i++];\n            }\n        }\n\n        while(i < mid) {\n            temp[k++] = array[i++];\n        }\n\n        while(j <= end) {\n            temp[k++] = array[j++];\n        }\n\n        for(i=start, k=0;i<=end;)\n            array[i++] = temp[k++];\n    }\n\n    async function Merge(start, end) {\n        if(start < end) {\n            await sleep(400);\n            UpdatePillars(array);\n            dispatch(UpdateArray);\n            var mid = parseInt((start+end)/2);\n            Merge(start, mid);\n            Merge(mid+1, end);\n            Merger(start, mid+1, end);\n            dispatch(UpdateArray)\n        }\n    }\n\n    async function MergeSort() {\n        Merge(0, size-1);\n        await sleep(400);\n            UpdatePillars(array);\n    }\n    \n    return (\n        <div>\n            <input disabled={sorting} type='button' value='Merge Sort' className='btn' onClick={MergeSort} />\n        </div>\n    )\n}\n\nexport default MergeSort\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":9,"column":1,"nodeType":"83","endLine":34,"endColumn":2},{"ruleId":"77","severity":1,"message":"84","line":5,"column":23,"nodeType":"79","messageId":"80","endLine":5,"endColumn":41},{"ruleId":"77","severity":1,"message":"85","line":8,"column":9,"nodeType":"79","messageId":"80","endLine":8,"endColumn":20},{"ruleId":"77","severity":1,"message":"86","line":8,"column":22,"nodeType":"79","messageId":"80","endLine":8,"endColumn":34},{"ruleId":"77","severity":1,"message":"87","line":8,"column":36,"nodeType":"79","messageId":"80","endLine":8,"endColumn":46},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'MergeSort' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'UpdateSortingState' is defined but never used.","'ChangeColor' is defined but never used.","'MakeAllWhite' is defined but never used.","'FinalCheck' is defined but never used.","no-global-assign","no-unsafe-negation"]